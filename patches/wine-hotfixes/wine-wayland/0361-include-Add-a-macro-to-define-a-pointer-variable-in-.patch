From 849b66d3fb6b5bd3419dd8d019b012b1980b2de5 Mon Sep 17 00:00:00 2001
From: Alexandre Julliard <julliard@winehq.org>
Date: Sun, 18 May 2025 12:13:06 +0200
Subject: [PATCH 361/441] include: Add a macro to define a pointer variable in
 assembly.

---
 dlls/ntdll/unix/signal_x86_64.c | 10 +++----
 include/wine/asm.h              | 47 +++++++++++++++------------------
 2 files changed, 25 insertions(+), 32 deletions(-)

diff --git a/dlls/ntdll/unix/signal_x86_64.c b/dlls/ntdll/unix/signal_x86_64.c
index a6dcb239ed8..a4d7f8246f0 100644
--- a/dlls/ntdll/unix/signal_x86_64.c
+++ b/dlls/ntdll/unix/signal_x86_64.c
@@ -3605,11 +3605,9 @@ __ASM_GLOBAL_FUNC( __wine_unix_call_dispatcher,
                    "pushq 0x70(%rcx)\n\t"          /* frame->rip */
                    "ret" )
 
-asm( ".data\n\t"
-     __ASM_GLOBL(__ASM_NAME("__wine_syscall_dispatcher_prolog_end_ptr")) "\n\t"
-     ".quad " __ASM_LOCAL_LABEL("__wine_syscall_dispatcher_prolog_end") "\n\t"
-     __ASM_GLOBL(__ASM_NAME("__wine_unix_call_dispatcher_prolog_end_ptr")) "\n\t"
-     ".quad " __ASM_LOCAL_LABEL("__wine_unix_call_dispatcher_prolog_end") "\n\t"
-     ".text\n\t" );
+__ASM_GLOBAL_POINTER( __ASM_NAME("__wine_syscall_dispatcher_prolog_end_ptr"),
+                      __ASM_LOCAL_LABEL("__wine_syscall_dispatcher_prolog_end") )
+__ASM_GLOBAL_POINTER( __ASM_NAME("__wine_unix_call_dispatcher_prolog_end_ptr"),
+                      __ASM_LOCAL_LABEL("__wine_unix_call_dispatcher_prolog_end") )
 
 #endif  /* __x86_64__ */
diff --git a/include/wine/asm.h b/include/wine/asm.h
index 6fef6944afd..172d7c8aa6e 100644
--- a/include/wine/asm.h
+++ b/include/wine/asm.h
@@ -108,40 +108,35 @@
 
 #define __ASM_GLOBAL_FUNC(name,code) __ASM_DEFINE_FUNC(__ASM_NAME(#name),code)
 
-/* import variables */
-
-#ifdef __WINE_PE_BUILD
-# ifdef __arm64ec__
-#  define __ASM_DEFINE_IMPORT(name) \
-    asm( ".data\n\t" \
-         ".balign 8\n\t" \
-         ".globl __imp_" name "\n" \
-         "__imp_" name ":\n\t" \
-         ".quad \"#" name "\"\n\t" \
-         ".globl __imp_aux_" name "\n" \
-         "__imp_aux_" name ":\n\t" \
-         ".quad " name "\n\t" \
-         ".text" );
-# elif defined(_WIN64)
-#  define __ASM_DEFINE_IMPORT(name) \
+#ifdef _WIN64
+#define __ASM_GLOBAL_POINTER(name,value) \
     __ASM_BLOCK_BEGIN(__LINE__) \
     asm( ".data\n\t" \
          ".balign 8\n\t" \
-         ".globl __imp_" name "\n" \
-         "__imp_" name ":\n\t" \
-         ".quad " name "\n\t" \
-         ".text"); \
+         __ASM_GLOBL(name) "\n\t" \
+         ".quad " value "\n\t" \
+         ".text" );
     __ASM_BLOCK_END
-# else
-#  define __ASM_DEFINE_IMPORT(name) \
+#else
+#define __ASM_GLOBAL_POINTER(name,value) \
     __ASM_BLOCK_BEGIN(__LINE__) \
     asm( ".data\n\t" \
          ".balign 4\n\t" \
-         ".globl __imp_" name "\n" \
-         "__imp_" name ":\n\t" \
-         ".long " name "\n\t" \
-         ".text"); \
+         __ASM_GLOBL(name) "\n\t" \
+         ".long " value "\n\t" \
+         ".text" );
     __ASM_BLOCK_END
+#endif
+
+/* import variables */
+
+#ifdef __WINE_PE_BUILD
+# ifdef __arm64ec__
+#  define __ASM_DEFINE_IMPORT(name) \
+     __ASM_GLOBAL_POINTER("__imp_" name, "\"#" name "\"") \
+     __ASM_GLOBAL_POINTER("__imp_aux_" name, name)
+# else
+#  define __ASM_DEFINE_IMPORT(name) __ASM_GLOBAL_POINTER("__imp_" name, name)
 # endif
 # define __ASM_GLOBAL_IMPORT(name) __ASM_DEFINE_IMPORT(__ASM_NAME(#name))
 #else
-- 
2.51.0

