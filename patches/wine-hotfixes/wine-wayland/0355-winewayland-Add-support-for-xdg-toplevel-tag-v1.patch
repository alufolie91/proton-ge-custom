From 3d48c177a71e0376756c726d939554063f7aefc6 Mon Sep 17 00:00:00 2001
From: Etaash Mathamsetty
 <45927311+Etaash-mathamsetty@users.noreply.github.com>
Date: Fri, 15 Aug 2025 11:41:18 -0400
Subject: [PATCH 355/365] winewayland: Add support for xdg-toplevel-tag-v1.

---
 dlls/winewayland.drv/Makefile.in             |  3 +-
 dlls/winewayland.drv/wayland.c               | 10 ++-
 dlls/winewayland.drv/wayland_surface.c       | 12 +++
 dlls/winewayland.drv/waylanddrv.h            |  2 +
 dlls/winewayland.drv/xdg-toplevel-tag-v1.xml | 85 ++++++++++++++++++++
 5 files changed, 110 insertions(+), 2 deletions(-)
 create mode 100644 dlls/winewayland.drv/xdg-toplevel-tag-v1.xml

diff --git a/dlls/winewayland.drv/Makefile.in b/dlls/winewayland.drv/Makefile.in
index ee77c526e1f..d257b39783a 100644
--- a/dlls/winewayland.drv/Makefile.in
+++ b/dlls/winewayland.drv/Makefile.in
@@ -35,4 +35,5 @@ SOURCES = \
 	xdg-output-unstable-v1.xml \
 	xdg-shell.xml \
 	xdg-system-bell-v1.xml \
-	xdg-toplevel-icon-v1.xml
+	xdg-toplevel-icon-v1.xml \
+	xdg-toplevel-tag-v1.xml
diff --git a/dlls/winewayland.drv/wayland.c b/dlls/winewayland.drv/wayland.c
index 3bb9ad8c273..2876975a34c 100644
--- a/dlls/winewayland.drv/wayland.c
+++ b/dlls/winewayland.drv/wayland.c
@@ -231,6 +231,11 @@ static void registry_handle_global(void *data, struct wl_registry *registry,
             process_wayland.zwp_linux_dmabuf_v1 =
                 wl_registry_bind(registry, id, &zwp_linux_dmabuf_v1_interface, version);
     }
+    else if (strcmp(interface, "xdg_toplevel_tag_manager_v1") == 0)
+    {
+        process_wayland.xdg_toplevel_tag_manager_v1 =
+            wl_registry_bind(registry, id, &xdg_toplevel_tag_manager_v1_interface, 1);
+    }
 }
 
 static void registry_handle_global_remove(void *data, struct wl_registry *registry,
@@ -380,7 +385,10 @@ BOOL wayland_process_init(void)
         WARN("Wayland compositor doesn't support optional wp_content_type_manager_v1!\n");
 
     if (!process_wayland.zwp_linux_dmabuf_v1)
-        ERR("Wayland compositor doesn't support zwp_linux_dmabuf_v1 version 4 (Cross process rendering will not be supported)!");
+        ERR("Wayland compositor doesn't support optional zwp_linux_dmabuf_v1 version 4 (Cross process rendering will not be supported)!");
+
+    if (!process_wayland.xdg_toplevel_tag_manager_v1)
+        WARN("Wayland compositor doesn't support optional xdg_toplevel_tag_manager_v1!\n");
 
     process_wayland.initialized = TRUE;
 
diff --git a/dlls/winewayland.drv/wayland_surface.c b/dlls/winewayland.drv/wayland_surface.c
index effb570a21d..42c0c77e069 100644
--- a/dlls/winewayland.drv/wayland_surface.c
+++ b/dlls/winewayland.drv/wayland_surface.c
@@ -341,6 +341,18 @@ void wayland_surface_make_toplevel(struct wayland_surface *surface)
     if (process_name)
         xdg_toplevel_set_app_id(surface->xdg_toplevel, process_name);
 
+    if (process_wayland.xdg_toplevel_tag_manager_v1)
+    {
+        xdg_toplevel_tag_manager_v1_set_toplevel_tag(
+            process_wayland.xdg_toplevel_tag_manager_v1, surface->xdg_toplevel,
+            "proton-game"
+        );
+        xdg_toplevel_tag_manager_v1_set_toplevel_description(
+            process_wayland.xdg_toplevel_tag_manager_v1, surface->xdg_toplevel,
+            "This is a game running through proton"
+        );
+    }
+
     wl_surface_commit(surface->wl_surface);
     wl_display_flush(process_wayland.wl_display);
 
diff --git a/dlls/winewayland.drv/waylanddrv.h b/dlls/winewayland.drv/waylanddrv.h
index 3e030c0ba82..f923525d97f 100644
--- a/dlls/winewayland.drv/waylanddrv.h
+++ b/dlls/winewayland.drv/waylanddrv.h
@@ -45,6 +45,7 @@
 #include "xdg-activation-v1-client-protocol.h"
 #include "content-type-v1-client-protocol.h"
 #include "linux-dmabuf-v1-client-protocol.h"
+#include "xdg-toplevel-tag-v1-client-protocol.h"
 
 #include "windef.h"
 #include "winbase.h"
@@ -216,6 +217,7 @@ struct wayland
     struct xdg_system_bell_v1 *xdg_system_bell_v1;
     struct xdg_activation_v1 *xdg_activation_v1;
     struct zwp_linux_dmabuf_v1 *zwp_linux_dmabuf_v1;
+    struct xdg_toplevel_tag_manager_v1 *xdg_toplevel_tag_manager_v1;
     struct wayland_seat seat;
     struct wayland_keyboard keyboard;
     struct wayland_pointer pointer;
diff --git a/dlls/winewayland.drv/xdg-toplevel-tag-v1.xml b/dlls/winewayland.drv/xdg-toplevel-tag-v1.xml
new file mode 100644
index 00000000000..5e20bdf45f8
--- /dev/null
+++ b/dlls/winewayland.drv/xdg-toplevel-tag-v1.xml
@@ -0,0 +1,85 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<protocol name="xdg_toplevel_tag_v1">
+  <copyright>
+    Copyright Â© 2024 Xaver Hugl
+
+    Permission is hereby granted, free of charge, to any person obtaining a
+    copy of this software and associated documentation files (the "Software"),
+    to deal in the Software without restriction, including without limitation
+    the rights to use, copy, modify, merge, publish, distribute, sublicense,
+    and/or sell copies of the Software, and to permit persons to whom the
+    Software is furnished to do so, subject to the following conditions:
+
+    The above copyright notice and this permission notice (including the next
+    paragraph) shall be included in all copies or substantial portions of the
+    Software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
+    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+    DEALINGS IN THE SOFTWARE.
+  </copyright>
+
+  <interface name="xdg_toplevel_tag_manager_v1" version="1">
+    <description summary="protocol for setting toplevel tags">
+      In order to make some window properties like position, size,
+      "always on top" or user defined rules for window behavior persistent, the
+      compositor needs some way to identify windows even after the application
+      has been restarted.
+      This protocol allows clients to make this possible by setting a tag for
+      toplevels.
+
+      Warning! The protocol described in this file is currently in the testing
+      phase. Backward compatible changes may be added together with the
+      corresponding interface version bump. Backward incompatible changes can
+      only be done by creating a new major version of the extension.
+    </description>
+
+    <request name="destroy" type="destructor">
+      <description summary="destroy toplevel tag object">
+        Destroy this toplevel tag manager object. This request has no other
+        effects.
+      </description>
+    </request>
+
+    <request name="set_toplevel_tag">
+      <description summary="set tag">
+        Set a tag for a toplevel. The tag may be shown to the user in UI, so
+        it's preferable for it to be human readable, but it must be suitable
+        for configuration files and should not be translated.
+        Suitable tags would for example be "main window", "settings",
+        "e-mail composer" or similar.
+
+        The tag does not need to be unique across applications, and the client
+        may set the same tag for multiple windows, for example if the user has
+        opened the same UI twice. How the potentially resulting conflicts are
+        handled is compositor policy.
+
+        The client should set the tag as part of the initial commit on the
+        associated toplevel, but it may set it at any time afterwards as well,
+        for example if the purpose of the toplevel changes.
+      </description>
+      <arg name="toplevel" type="object" interface="xdg_toplevel"/>
+      <arg name="tag" type="string" summary="untranslated tag"/>
+    </request>
+
+    <request name="set_toplevel_description">
+      <description summary="set description">
+        Set a description for a toplevel. This description may be shown to the
+        user in UI or read by a screen reader for accessibility purposes, and
+        should be translated.
+        It is recommended to make the description the translation of the tag.
+
+        The client should set the description as part of the initial commit on
+        the associated toplevel, but it may set it at any time afterwards as
+        well, for example if the purpose of the toplevel changes.
+      </description>
+      <arg name="toplevel" type="object" interface="xdg_toplevel"/>
+      <arg name="description" type="string" summary="translated description"/>
+    </request>
+  </interface>
+
+</protocol>
-- 
2.50.1

