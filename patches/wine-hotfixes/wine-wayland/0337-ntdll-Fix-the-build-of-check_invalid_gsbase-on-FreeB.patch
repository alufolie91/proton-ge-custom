From e54fc4956e0a2a4ca97375e7a81271cf77f7a921 Mon Sep 17 00:00:00 2001
From: Gerald Pfeifer <gerald@pfeifer.com>
Date: Sun, 7 Sep 2025 23:32:32 +0200
Subject: [PATCH 337/378] ntdll: Fix the build of check_invalid_gsbase() on
 FreeBSD.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This addresses

  dlls/ntdll/unix/signal_x86_64.c: In function ‘check_invalid_gsbase’:
  dlls/ntdll/unix/signal_x86_64.c:2067:23: error: passing argument 1 of ‘amd64_get_gsbase’ from incompatible pointer type [-Wincompatible-pointer-types]
   2067 |     amd64_get_gsbase( &cur_gsbase );
        |                       ^~~~~~~~~~~
        |                       |
        |                       ULONG_PTR * {aka long unsigned int *}

which shows with modern compilers.
---
 dlls/ntdll/unix/signal_x86_64.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/dlls/ntdll/unix/signal_x86_64.c b/dlls/ntdll/unix/signal_x86_64.c
index 992e550adb1..033c9ed90b8 100644
--- a/dlls/ntdll/unix/signal_x86_64.c
+++ b/dlls/ntdll/unix/signal_x86_64.c
@@ -2365,7 +2365,7 @@ static inline BOOL check_invalid_gsbase( ucontext_t *ucontext )
     else
         arch_prctl( ARCH_GET_GS, &cur_gsbase );
 #elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
-    amd64_get_gsbase( &cur_gsbase );
+    amd64_get_gsbase( (void**)&cur_gsbase );
 #elif defined(__NetBSD__)
     sysarch( X86_64_GET_GSBASE, &cur_gsbase );
 #elif defined(__APPLE__)
-- 
2.51.0

