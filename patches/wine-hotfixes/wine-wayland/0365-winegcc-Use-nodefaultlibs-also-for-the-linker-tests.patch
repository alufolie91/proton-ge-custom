From 186bd7530ab954b17eb74b40a0affa6e51e49903 Mon Sep 17 00:00:00 2001
From: Alexandre Julliard <julliard@winehq.org>
Date: Fri, 7 Mar 2025 15:49:42 +0100
Subject: [PATCH 365/378] winegcc: Use -nodefaultlibs also for the linker
 tests.

---
 tools/winegcc/winegcc.c | 26 ++++++++++++++------------
 1 file changed, 14 insertions(+), 12 deletions(-)

diff --git a/tools/winegcc/winegcc.c b/tools/winegcc/winegcc.c
index facf734a9f8..0791aef8abd 100644
--- a/tools/winegcc/winegcc.c
+++ b/tools/winegcc/winegcc.c
@@ -503,7 +503,7 @@ static struct strarray get_translator(struct options *opts)
     return empty_strarray;
 }
 
-static int try_link( struct strarray prefix, struct strarray link_tool, const char *cflags )
+static int try_link( const struct options *opts, struct strarray link_tool, const char *cflags )
 {
     const char *in = make_temp_file( "try_link", ".c" );
     const char *out = make_temp_file( "try_link", ".out" );
@@ -512,7 +512,7 @@ static int try_link( struct strarray prefix, struct strarray link_tool, const ch
     int sout = -1, serr = -1;
     int ret;
 
-    create_file( in, 0644, "int main(void){return 1;}\n" );
+    create_file( in, 0644, "int %s(void){return 1;}\n", is_pe_target(opts) ? "mainCRTStartup" : "main");
 
     strarray_addall( &link, link_tool );
     strarray_add( &link, "-o" );
@@ -524,7 +524,7 @@ static int try_link( struct strarray prefix, struct strarray link_tool, const ch
     freopen( err, "w", stdout );
     serr = dup( fileno(stderr) );
     freopen( err, "w", stderr );
-    ret = spawn( prefix, link, 1 );
+    ret = spawn( opts->prefix, link, 1 );
     if (sout >= 0)
     {
         dup2( sout, fileno(stdout) );
@@ -579,6 +579,9 @@ static struct strarray get_link_args( struct options *opts, const char *output_n
 
     case PLATFORM_MINGW:
     case PLATFORM_CYGWIN:
+        strarray_add( &link_args, "-nodefaultlibs" );
+        strarray_add( &link_args, "-nostartfiles" );
+
         if (opts->shared || opts->win16_app)
         {
             strarray_add( &flags, "-shared" );
@@ -587,8 +590,6 @@ static struct strarray get_link_args( struct options *opts, const char *output_n
         else strarray_add( &flags, opts->gui_app ? "-mwindows" : "-mconsole" );
 
         if (opts->unicode_app) strarray_add( &flags, "-municode" );
-        strarray_add( &flags, "-nodefaultlibs" );
-        strarray_add( &flags, "-nostartfiles" );
         if (opts->subsystem) strarray_add( &flags, strmake("-Wl,--subsystem,%s", opts->subsystem ));
 
         strarray_add( &flags, "-Wl,--exclude-all-symbols" );
@@ -610,10 +611,10 @@ static struct strarray get_link_args( struct options *opts, const char *output_n
         if (opts->out_implib)
             strarray_add(&link_args, strmake("-Wl,--out-implib,%s", opts->out_implib));
 
-        if (!try_link( opts->prefix, link_args, "-Wl,--file-alignment,0x1000" ))
+        if (!try_link( opts, link_args, "-Wl,--file-alignment,0x1000" ))
             strarray_add( &link_args, strmake( "-Wl,--file-alignment,%s",
                                               opts->file_align ? opts->file_align : "0x1000" ));
-        else if (!try_link( opts->prefix, link_args, "-Wl,-Xlink=-filealign:0x1000" ))
+        else if (!try_link( opts, link_args, "-Wl,-Xlink=-filealign:0x1000" ))
             /* lld from llvm 10 does not support mingw style --file-alignment,
              * but it's possible to use msvc syntax */
             strarray_add( &link_args, strmake( "-Wl,-Xlink=-filealign:%s",
@@ -623,14 +624,15 @@ static struct strarray get_link_args( struct options *opts, const char *output_n
         return link_args;
 
     case PLATFORM_WINDOWS:
+        strarray_add( &link_args, "-nodefaultlibs" );
+        strarray_add( &link_args, "-nostartfiles" );
+
         if (opts->shared || opts->win16_app)
         {
             strarray_add( &flags, "-shared" );
             strarray_add( &flags, "-Wl,-kill-at" );
         }
         if (opts->unicode_app) strarray_add( &flags, "-municode" );
-        strarray_add( &flags, "-nodefaultlibs" );
-        strarray_add( &flags, "-nostdlib" );
         if (opts->nostartfiles) strarray_add( &flags, "-nostartfiles" );
         if (opts->image_base) strarray_add( &flags, strmake("-Wl,-base:%s", opts->image_base ));
         if (opts->subsystem)
@@ -662,10 +664,10 @@ static struct strarray get_link_args( struct options *opts, const char *output_n
     default:
         if (opts->image_base)
         {
-            if (!try_link( opts->prefix, link_args, strmake("-Wl,-Ttext-segment=%s", opts->image_base)) )
+            if (!try_link( opts, link_args, strmake("-Wl,-Ttext-segment=%s", opts->image_base)) )
                 strarray_add( &flags, strmake("-Wl,-Ttext-segment=%s", opts->image_base) );
         }
-        if (!try_link( opts->prefix, link_args, "-Wl,-z,max-page-size=0x1000"))
+        if (!try_link( opts, link_args, "-Wl,-z,max-page-size=0x1000"))
             strarray_add( &flags, "-Wl,-z,max-page-size=0x1000");
         break;
     }
@@ -679,7 +681,7 @@ static struct strarray get_link_args( struct options *opts, const char *output_n
     strarray_add( &link_args, "-Wl,-Bsymbolic" );
     if (!opts->noshortwchar && opts->target.cpu == CPU_ARM)
         strarray_add( &flags, "-Wl,--no-wchar-size-warning" );
-    if (!try_link( opts->prefix, link_args, "-Wl,-z,defs" ))
+    if (!try_link( opts, link_args, "-Wl,-z,defs" ))
         strarray_add( &flags, "-Wl,-z,defs" );
 
     strarray_addall( &link_args, flags );
-- 
2.51.0

