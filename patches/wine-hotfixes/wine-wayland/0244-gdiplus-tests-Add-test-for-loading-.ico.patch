From 8ac25416874ad8ad8931c07b1f3a2f4736f9c583 Mon Sep 17 00:00:00 2001
From: Fabian Maurer <dark.shadow4@web.de>
Date: Wed, 12 Feb 2025 18:49:57 +0100
Subject: [PATCH 244/336] gdiplus/tests: Add test for loading .ico.

---
 dlls/gdiplus/tests/image.c       |  44 +++++++++++++++++++++++++++++++
 dlls/gdiplus/tests/resource.rc   |   3 +++
 dlls/gdiplus/tests/wine_test.ico | Bin 0 -> 4375 bytes
 3 files changed, 47 insertions(+)
 create mode 100644 dlls/gdiplus/tests/wine_test.ico

diff --git a/dlls/gdiplus/tests/image.c b/dlls/gdiplus/tests/image.c
index df26f699e86..256aa360d47 100644
--- a/dlls/gdiplus/tests/image.c
+++ b/dlls/gdiplus/tests/image.c
@@ -486,11 +486,39 @@ static void test_GdipImageGetFrameDimensionsCount(void)
     GdipDisposeImage((GpImage*)bm);
 }
 
+static void _load_resource(int line, const WCHAR *filename, BYTE **data, DWORD *size)
+{
+    HRSRC resource = FindResourceW(NULL, filename, (const WCHAR *)RT_RCDATA);
+    ok_(__FILE__, line)(!!resource, "FindResourceW failed, error %lu\n", GetLastError());
+    *data = LockResource(LoadResource(GetModuleHandleW(NULL), resource));
+    ok_(__FILE__, line)(!!*data, "LockResource failed, error %lu\n", GetLastError());
+    *size = SizeofResource(GetModuleHandleW(NULL), resource);
+    ok_(__FILE__, line)(*size > 0, "SizeofResource failed, error %lu\n", GetLastError());
+}
+
+static void create_test_resource(const WCHAR *filename, int resource)
+{
+    DWORD written, length;
+    HANDLE file;
+    void *ptr;
+
+    file = CreateFileW(filename, GENERIC_READ|GENERIC_WRITE, 0, NULL, CREATE_ALWAYS, 0, 0);
+    ok(file != INVALID_HANDLE_VALUE, "file creation failed, at %s, error %ld\n", wine_dbgstr_w(filename), GetLastError());
+
+    _load_resource(__LINE__, MAKEINTRESOURCEW(resource), (BYTE **)&ptr, &length);
+    WriteFile(file, ptr, length, &written, NULL);
+    ok(written == length, "couldn't write resource\n");
+    CloseHandle(file);
+}
+
 static void test_LoadingImages(void)
 {
+    static const GUID format_ico = { 0xb96b3cb5U, 0x0728U, 0x11d3U, {0x9d, 0x7b, 0x00, 0x00, 0xf8, 0x1e, 0xf3, 0x2e} };
+    static const WCHAR filename_ico[] = L"a.ico";
     GpStatus stat;
     GpBitmap *bm;
     GpImage *img;
+    GUID format;
 
     stat = GdipCreateBitmapFromFile(0, 0);
     expect(InvalidParameter, stat);
@@ -530,6 +558,22 @@ static void test_LoadingImages(void)
     stat = GdipLoadImageFromFileICM(L"nonexistent", &img);
     todo_wine expect(OutOfMemory, stat);
     ok(!img, "returned %p\n", img);
+
+    create_test_resource(filename_ico, 5);
+
+    bm = NULL;
+    stat = GdipLoadImageFromFile(filename_ico, (GpImage**)&bm);
+    expect(Ok, stat);
+    if (stat != Ok) goto cleanup;
+
+    stat = GdipGetImageRawFormat((GpImage*)bm, &format);
+    expect(Ok, stat);
+    expect_guid(&format_ico, &format, __LINE__, TRUE);
+
+cleanup:
+    if (bm)
+        GdipDisposeImage((GpImage*)bm);
+    ok(DeleteFileW(filename_ico), "Delete failed.\n");
 }
 
 static void test_SavingImages(void)
diff --git a/dlls/gdiplus/tests/resource.rc b/dlls/gdiplus/tests/resource.rc
index 4af61fef65d..b16b933fb43 100644
--- a/dlls/gdiplus/tests/resource.rc
+++ b/dlls/gdiplus/tests/resource.rc
@@ -31,3 +31,6 @@
 /* Generated with: fonttools ttx wine_unicode_mac.ttx */
 /* @makedep: wine_unicode_mac.ttf */
 4 RCDATA wine_unicode_mac.ttf
+
+/* Copied from shell32/blank.ico */
+5 RCDATA wine_test.ico
diff --git a/dlls/gdiplus/tests/wine_test.ico b/dlls/gdiplus/tests/wine_test.ico
new file mode 100644
index 0000000000000000000000000000000000000000..63b7cdda93f03885fe39c067411eb2a021f492ba
GIT binary patch
literal 4375
zcmeH~O-NKx6vuye(wx+n4_XY>!q-9xM7lEuGdx^0F~c~>OgYV><xJ!F1yaPzJ{CDe
zo7%L9K*5Cz(Vgf@Xd&1(T)V18n?h*SLXe<1GZXrR0#O)+`-Af?f4G->_`h?w_kyAo
zLE#Wrun1@!K%vlQ;G6R6P_tjBg5Wsy`3fGl`Snt}UvF7p+qL;CKud>TuN}~%HoU%_
zO<Ap%BvC6pkjP2467t16_x=;mG#byuVfAg>uVORclm>Dcc-9S-SFj6IzQZF8+XZlE
zAoO7F!%#mE@N(HZF!gRTChFc`DuMd^=E8#H=cO~rmaoCfR;cI2R{1Ajmx|db2s{C0
z13`&vXBYE8XF3tjkA3;Ep)BCz{LZb(^U?XL!@#<A1=RG#xh0^>OWyT{i(c6+JuDZ!
zG7%k)_3Bt}B$^M0-AJE%y{|_{T&+8z+g-i|llO<mN1pzB!SjjStn8OgW)sUd3oozA
zPX!8lwo$3NS0hj#4JU)&RWM_Nd@%iTx@c6Ln0*CIznn5m-PY>1Q9j7|;s7`H-^cdV
v&`G<G)qH9k#;?O+{5l-sm%QYpC+pA3YH$AKxcgDg%%g<K_x~KlTUq-DV4Imm

literal 0
HcmV?d00001

-- 
2.51.0

