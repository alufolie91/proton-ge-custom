From 37f3e0df250022fc330da55fb19ee49c26a5fd59 Mon Sep 17 00:00:00 2001
From: Etaash Mathamsetty <etaash.mathamsetty@gmail.com>
Date: Tue, 5 Aug 2025 13:14:29 -0400
Subject: [PATCH 232/327] winewayland: Add support for model name.

---
 dlls/winewayland.drv/display.c        | 19 +++++++++++++------
 dlls/winewayland.drv/wayland_output.c |  9 +++++++++
 dlls/winewayland.drv/waylanddrv.h     |  1 +
 3 files changed, 23 insertions(+), 6 deletions(-)

diff --git a/dlls/winewayland.drv/display.c b/dlls/winewayland.drv/display.c
index aa5954c4c00..e8fcd015382 100644
--- a/dlls/winewayland.drv/display.c
+++ b/dlls/winewayland.drv/display.c
@@ -276,6 +276,7 @@ static UINT get_edid(const struct output_info *output_info, unsigned char **data
     unsigned char c;
     struct wayland_output_mode *mode = output_info->output->current_mode;
     const struct wayland_primaries *primaries = &output_info->output->primaries;
+    const char *model = output_info->output->model;
 
     mwidth = output_info->output->width_mm;
     mheight = output_info->output->height_mm;
@@ -294,6 +295,13 @@ static UINT get_edid(const struct output_info *output_info, unsigned char **data
     if (!data) return 0;
 
     *(uint64_t*)data = 0x00ffffffffffff00;
+    if (model && strlen(model) >= 2)
+    {
+        data[10] = model[0];
+        data[11] = model[1];
+    }
+    data[16] = 0xFF;
+    data[17] = 31; /* 2021 */
     data[18] = 1;
     data[19] = 4;
     data[20] = 0xa0; /* FIXME */
@@ -330,24 +338,23 @@ static UINT get_edid(const struct output_info *output_info, unsigned char **data
 
     p += 18;
     p[3] = 0xfc;
-    if (!output_info->output->name)
+    if (!model)
         strcpy( (char *)p + 5, "Default" );
     else
     {
         int i = 0;
 
         p += 5;
-        for (; i < strlen(output_info->output->name); i++)
+        for (; i < strlen(model); i++)
         {
-            char d = output_info->output->name[i];
-            if (i >= 10) break;
-            if (d == '-') d = ' ';
+            char d = model[i];
+            if (i >= 11) break;
             p[i] = d;
         }
 
         p[i] = '\n';
 
-        TRACE("name: %s\n", p);
+        TRACE("model: %s\n", p);
         p -= 5;
     }
 
diff --git a/dlls/winewayland.drv/wayland_output.c b/dlls/winewayland.drv/wayland_output.c
index cec4598ca07..e2af42de875 100644
--- a/dlls/winewayland.drv/wayland_output.c
+++ b/dlls/winewayland.drv/wayland_output.c
@@ -180,9 +180,11 @@ static void wayland_output_done(struct wayland_output *output)
 
     if (output->pending_flags & WAYLAND_OUTPUT_CHANGED_GEOMETRY)
     {
+        free(output->current.model);
         output->current.transform = output->pending.transform;
         output->current.width_mm = output->pending.width_mm;
         output->current.height_mm = output->pending.height_mm;
+        output->current.model = output->pending.model;
     }
 
 
@@ -240,6 +242,7 @@ static void output_handle_geometry(void *data, struct wl_output *wl_output,
     output->pending.transform = output_transform;
     output->pending.width_mm = physical_width;
     output->pending.height_mm = physical_height;
+    output->pending.model = strdup(model);
 
     output->pending_flags |= WAYLAND_OUTPUT_CHANGED_GEOMETRY;
 }
@@ -594,6 +597,12 @@ BOOL wayland_output_create(uint32_t id, uint32_t version)
         goto err;
     }
 
+    if (!(output->current.model = strdup("Monitor")))
+    {
+        ERR("Couldn't allocate space for output model\n");
+        goto err;
+    }
+
     if (process_wayland.zxdg_output_manager_v1)
         wayland_output_use_xdg_extension(output);
     if (process_wayland.wp_color_manager_v1)
diff --git a/dlls/winewayland.drv/waylanddrv.h b/dlls/winewayland.drv/waylanddrv.h
index 2641123b156..b650be2deb9 100644
--- a/dlls/winewayland.drv/waylanddrv.h
+++ b/dlls/winewayland.drv/waylanddrv.h
@@ -249,6 +249,7 @@ struct wayland_output_state
     uint32_t max_fall;
     uint32_t max_cll;
     char *name;
+    char *model;
     int logical_x, logical_y;
     int logical_w, logical_h;
     int transform;
-- 
2.51.0

