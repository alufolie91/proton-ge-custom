From e38b15281fbe2ee400b46aa25ffc8c04ec577208 Mon Sep 17 00:00:00 2001
From: Haoyang Chen <chenhaoyang@kylinos.cn>
Date: Wed, 10 Sep 2025 15:19:04 +0800
Subject: [PATCH 335/336] ntdll: Fix a buffer overflow in wcsncpy.

---
 dlls/ntdll/tests/string.c | 20 ++++++++++++++++++++
 dlls/ntdll/wcstring.c     |  9 +++++----
 2 files changed, 25 insertions(+), 4 deletions(-)

diff --git a/dlls/ntdll/tests/string.c b/dlls/ntdll/tests/string.c
index 3d975d12a10..35700ae456f 100644
--- a/dlls/ntdll/tests/string.c
+++ b/dlls/ntdll/tests/string.c
@@ -68,6 +68,7 @@ static WCHAR    (__cdecl *ptowlower)(WCHAR);
 static WCHAR    (__cdecl *ptowupper)(WCHAR);
 static int      (__cdecl *p_wcsicmp)(LPCWSTR,LPCWSTR);
 static int      (__cdecl *p_wcsnicmp)(LPCWSTR,LPCWSTR,int);
+static LPWSTR   (__cdecl *pwcsncpy)(LPCWSTR,LPCWSTR,int);
 
 static LPWSTR   (__cdecl *pwcschr)(LPCWSTR, WCHAR);
 static LPWSTR   (__cdecl *pwcsrchr)(LPCWSTR, WCHAR);
@@ -139,6 +140,7 @@ static void InitFunctionPtrs(void)
     X(towupper);
     X(_wcsicmp);
     X(_wcsnicmp);
+    X(wcsncpy);
     X(wcschr);
     X(wcsrchr);
     X(memchr);
@@ -2233,6 +2235,23 @@ static void test_memchr(void)
     ok(r == s, "memchr returned %p, expected %p\n", r, s);
 }
 
+static void test_wcsncpy(void)
+{
+    wchar_t dst[8], *p;
+
+    memset(dst, 0xbb, sizeof(dst));
+    p = pwcsncpy(dst, L"1234567", 6);
+    ok(p == dst, "unexpected return value.\n");
+    ok(!wcsncmp(dst, L"123456", 6), "unexpected buffer %s\n",
+            wine_dbgstr_wn(dst, ARRAY_SIZE(dst)));
+    ok(dst[6] == 0xbbbb , "expected 0xbbbb unexpected wchar_t %x\n", dst[6]);
+
+    memset(dst, 0xbb, sizeof(dst));
+    pwcsncpy(dst, L"123", 5);
+    ok(dst[4] == 0, "expected 0, unexpected wchar_t %x\n", dst[4]);
+    ok(dst[5] == 0xbbbb , "expected 0xbbbb unexpected wchar_t %x\n", dst[5]);
+}
+
 START_TEST(string)
 {
     InitFunctionPtrs();
@@ -2266,4 +2285,5 @@ START_TEST(string)
     test_wctype();
     test_ctype();
     test_memchr();
+    test_wcsncpy();
 }
diff --git a/dlls/ntdll/wcstring.c b/dlls/ntdll/wcstring.c
index aa43c3de16b..5de12a1d246 100644
--- a/dlls/ntdll/wcstring.c
+++ b/dlls/ntdll/wcstring.c
@@ -352,10 +352,11 @@ int __cdecl wcsncmp( LPCWSTR str1, LPCWSTR str2, size_t n )
 #undef wcsncpy
 LPWSTR __cdecl wcsncpy( LPWSTR s1, LPCWSTR s2, size_t n )
 {
-    WCHAR *ret = s1;
-    for ( ; n; n--) if (!(*s1++ = *s2++)) break;
-    for ( ; n; n--) *s1++ = 0;
-    return ret;
+    size_t i;
+
+    for (i = 0; i < n; i++) if(!(s1[i] = s2[i])) break;
+    for (; i < n; i++) s1[i] = 0;
+    return s1;
 }
 
 
-- 
2.51.0

