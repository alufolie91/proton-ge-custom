diff --git a/dlls/mfsrcsnk/media_source.c b/dlls/mfsrcsnk/media_source.c
index 40f7ecd1074..126dccd5e9c 100644
--- a/dlls/mfsrcsnk/media_source.c
+++ b/dlls/mfsrcsnk/media_source.c
@@ -20,6 +20,9 @@
 #define WIN32_NO_STATUS
 #include "mfsrcsnk_private.h"
 
+#include <stdlib.h>
+#include <string.h>
+
 #include "wine/list.h"
 #include "wine/debug.h"
 #include "wine/winedmo.h"
@@ -2009,6 +2012,14 @@ static BOOL use_gst_byte_stream_handler(void)
 {
     BOOL result;
     DWORD size = sizeof(result);
+    const char *orientation = getenv("PROTON_GST_VIDEO_ORIENTATION");
+    const char *media_use_gst = getenv("PROTON_MEDIA_USE_GST");
+
+    /* Proton override: if PROTON_VIDEO_ORIENTATION is set then manually set orientation based on value */
+    if (orientation || (media_use_gst && !strcmp(media_use_gst, "1")))
+    {
+        return TRUE;
+    }
 
     /* @@ Wine registry key: HKCU\Software\Wine\MediaFoundation */
     if (!RegGetValueW( HKEY_CURRENT_USER, L"Software\\Wine\\MediaFoundation", L"DisableGstByteStreamHandler",
diff --git a/dlls/winegstreamer/wg_parser.c b/dlls/winegstreamer/wg_parser.c
index 9755548790d..f82984ba4ad 100644
--- a/dlls/winegstreamer/wg_parser.c
+++ b/dlls/winegstreamer/wg_parser.c
@@ -29,6 +29,8 @@
 #include <assert.h>
 #include <stdarg.h>
 #include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
 
 #define GLIB_VERSION_MIN_REQUIRED GLIB_VERSION_2_30
 #include <gst/gst.h>
@@ -271,6 +273,7 @@ static NTSTATUS wg_parser_stream_enable(void *args)
     struct wg_parser_stream *stream = get_stream(params->stream);
     const struct wg_format *format = params->format;
     struct wg_parser *parser = stream->parser;
+    const char *env = getenv("PROTON_GST_VIDEO_ORIENTATION");
 
     pthread_mutex_lock(&parser->mutex);
 
@@ -286,6 +289,28 @@ static NTSTATUS wg_parser_stream_enable(void *args)
         gst_util_set_object_arg(G_OBJECT(stream->flip), "method", flip ? "vertical-flip" : "none");
     }
 
+    /* Proton override: if PROTON_GST_VIDEO_ORIENTATION is set then manually set orientation based on value */
+    if (env && !strcmp(env, "automatic"))
+    {
+        GST_INFO("Manual video orientation: automatic.");
+        gst_util_set_object_arg(G_OBJECT(stream->flip), "method", "automatic");
+    }
+    if (env && !strcmp(env, "vertical-flip"))
+    {
+        GST_INFO("Manual video orientation: vertical-flip.");
+        gst_util_set_object_arg(G_OBJECT(stream->flip), "method", "vertical-flip");
+    }
+    if (env && !strcmp(env, "horizontal-flip"))
+    {
+        GST_INFO("Manual video orientation: horizontal-flip.");
+        gst_util_set_object_arg(G_OBJECT(stream->flip), "method", "horizontal-flip");
+    }
+    if (env && !strcmp(env, "rotate-180"))
+    {
+        GST_INFO("Manual video orientation: rotate-180.");
+        gst_util_set_object_arg(G_OBJECT(stream->flip), "method", "rotate-180");
+    }
+
     push_event(stream->my_sink, gst_event_new_reconfigure());
     return S_OK;
 }
