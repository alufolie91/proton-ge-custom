From cf8e91b8b08d58e62672db898c9843fcddbb0ca5 Mon Sep 17 00:00:00 2001
From: Akihiro Sagawa <sagawa.aki@gmail.com>
Date: Tue, 6 May 2025 23:58:39 +0900
Subject: [PATCH 1/5] d2d1: Fix a crash in Clear method if no target is set.

Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=58185
---
 dlls/d2d1/device.c     |  9 ++++++++
 dlls/d2d1/tests/d2d1.c | 47 ++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 56 insertions(+)

diff --git a/dlls/d2d1/device.c b/dlls/d2d1/device.c
index 4780acb3bec..d9494d4f90b 100644
--- a/dlls/d2d1/device.c
+++ b/dlls/d2d1/device.c
@@ -1858,6 +1858,15 @@ static void STDMETHODCALLTYPE d2d_device_context_Clear(ID2D1DeviceContext6 *ifac
 
     TRACE("iface %p, colour %p.\n", iface, colour);
 
+    if (FAILED(context->error.code))
+        return;
+
+    if (context->target.type == D2D_TARGET_UNKNOWN)
+    {
+        d2d_device_context_set_error(context, D2DERR_WRONG_STATE);
+        return;
+    }
+
     if (context->target.type == D2D_TARGET_COMMAND_LIST)
     {
         d2d_command_list_clear(context->target.command_list, colour);
-- 
GitLab


From b1600581ef146969cbcd35092ea5961c5ded4483 Mon Sep 17 00:00:00 2001
From: Akihiro Sagawa <sagawa.aki@gmail.com>
Date: Wed, 7 May 2025 22:11:28 +0900
Subject: [PATCH 2/5] d2d1: Fix a crash in DrawBitmap method family if no
 target is set.

---
 dlls/d2d1/device.c     | 27 +++++++++++++++++++++++++++
 dlls/d2d1/tests/d2d1.c | 31 +++++++++++++++++++++++++++++++
 2 files changed, 58 insertions(+)

diff --git a/dlls/d2d1/device.c b/dlls/d2d1/device.c
index d9494d4f90b..f6ff44cd32c 100644
--- a/dlls/d2d1/device.c
+++ b/dlls/d2d1/device.c
@@ -1216,6 +1216,15 @@ static void STDMETHODCALLTYPE d2d_device_context_DrawBitmap(ID2D1DeviceContext6
     TRACE("iface %p, bitmap %p, dst_rect %s, opacity %.8e, interpolation_mode %#x, src_rect %s.\n",
             iface, bitmap, debug_d2d_rect_f(dst_rect), opacity, interpolation_mode, debug_d2d_rect_f(src_rect));
 
+    if (FAILED(context->error.code))
+        return;
+
+    if (context->target.type == D2D_TARGET_UNKNOWN)
+    {
+        d2d_device_context_set_error(context, D2DERR_WRONG_STATE);
+        return;
+    }
+
     if (interpolation_mode != D2D1_BITMAP_INTERPOLATION_MODE_NEAREST_NEIGHBOR
             && interpolation_mode != D2D1_BITMAP_INTERPOLATION_MODE_LINEAR)
     {
@@ -2559,6 +2568,15 @@ static void STDMETHODCALLTYPE d2d_device_context_DrawImage(ID2D1DeviceContext6 *
             iface, image, debug_d2d_point_2f(target_offset), debug_d2d_rect_f(image_rect),
             interpolation_mode, composite_mode);
 
+    if (FAILED(context->error.code))
+        return;
+
+    if (context->target.type == D2D_TARGET_UNKNOWN)
+    {
+        d2d_device_context_set_error(context, D2DERR_WRONG_STATE);
+        return;
+    }
+
     if (context->target.type == D2D_TARGET_COMMAND_LIST)
     {
         d2d_command_list_draw_image(context->target.command_list, image, target_offset, image_rect,
@@ -2598,6 +2616,15 @@ static void STDMETHODCALLTYPE d2d_device_context_ID2D1DeviceContext_DrawBitmap(I
             iface, bitmap, debug_d2d_rect_f(dst_rect), opacity, interpolation_mode,
             debug_d2d_rect_f(src_rect), perspective_transform);
 
+    if (FAILED(context->error.code))
+        return;
+
+    if (context->target.type == D2D_TARGET_UNKNOWN)
+    {
+        d2d_device_context_set_error(context, D2DERR_WRONG_STATE);
+        return;
+    }
+
     if (context->target.type == D2D_TARGET_COMMAND_LIST)
     {
         d2d_command_list_draw_bitmap(context->target.command_list, bitmap, dst_rect, opacity, interpolation_mode,
-- 
GitLab


From 8348b879947a7d88cc192a80fdbc5fda7914b91b Mon Sep 17 00:00:00 2001
From: Akihiro Sagawa <sagawa.aki@gmail.com>
Date: Tue, 6 May 2025 23:58:39 +0900
Subject: [PATCH 3/5] d2d1: Fix a crash in DrawGeometry method family if no
 target is set.

---
 dlls/d2d1/device.c     | 21 +++++++++++++++++++++
 dlls/d2d1/tests/d2d1.c | 24 ++++++++++++++++++++++++
 2 files changed, 45 insertions(+)

diff --git a/dlls/d2d1/device.c b/dlls/d2d1/device.c
index f6ff44cd32c..e06bbb32cb1 100644
--- a/dlls/d2d1/device.c
+++ b/dlls/d2d1/device.c
@@ -586,6 +586,9 @@ static void STDMETHODCALLTYPE d2d_device_context_DrawLine(ID2D1DeviceContext6 *i
     TRACE("iface %p, p0 %s, p1 %s, brush %p, stroke_width %.8e, stroke_style %p.\n",
             iface, debug_d2d_point_2f(&p0), debug_d2d_point_2f(&p1), brush, stroke_width, stroke_style);
 
+    if (FAILED(context->error.code))
+        return;
+
     if (context->target.type == D2D_TARGET_COMMAND_LIST)
     {
         d2d_command_list_draw_line(context->target.command_list, context, p0, p1, brush, stroke_width, stroke_style);
@@ -626,6 +629,9 @@ static void STDMETHODCALLTYPE d2d_device_context_DrawRectangle(ID2D1DeviceContex
     TRACE("iface %p, rect %s, brush %p, stroke_width %.8e, stroke_style %p.\n",
             iface, debug_d2d_rect_f(rect), brush, stroke_width, stroke_style);
 
+    if (FAILED(context->error.code))
+        return;
+
     if (context->target.type == D2D_TARGET_COMMAND_LIST)
     {
         d2d_command_list_draw_rectangle(context->target.command_list, context, rect, brush, stroke_width, stroke_style);
@@ -677,6 +683,9 @@ static void STDMETHODCALLTYPE d2d_device_context_DrawRoundedRectangle(ID2D1Devic
     TRACE("iface %p, rect %p, brush %p, stroke_width %.8e, stroke_style %p.\n",
             iface, rect, brush, stroke_width, stroke_style);
 
+    if (FAILED(render_target->error.code))
+        return;
+
     if (FAILED(hr = ID2D1Factory_CreateRoundedRectangleGeometry(render_target->factory, rect, &geometry)))
     {
         ERR("Failed to create geometry, hr %#lx.\n", hr);
@@ -716,6 +725,9 @@ static void STDMETHODCALLTYPE d2d_device_context_DrawEllipse(ID2D1DeviceContext6
     TRACE("iface %p, ellipse %p, brush %p, stroke_width %.8e, stroke_style %p.\n",
             iface, ellipse, brush, stroke_width, stroke_style);
 
+    if (FAILED(render_target->error.code))
+        return;
+
     if (FAILED(hr = ID2D1Factory_CreateEllipseGeometry(render_target->factory, ellipse, &geometry)))
     {
         ERR("Failed to create geometry, hr %#lx.\n", hr);
@@ -961,6 +973,15 @@ static void STDMETHODCALLTYPE d2d_device_context_DrawGeometry(ID2D1DeviceContext
     TRACE("iface %p, geometry %p, brush %p, stroke_width %.8e, stroke_style %p.\n",
             iface, geometry, brush, stroke_width, stroke_style);
 
+    if (FAILED(context->error.code))
+        return;
+
+    if (context->target.type == D2D_TARGET_UNKNOWN)
+    {
+        d2d_device_context_set_error(context, D2DERR_WRONG_STATE);
+        return;
+    }
+
     if (context->target.type == D2D_TARGET_COMMAND_LIST)
     {
         d2d_command_list_draw_geometry(context->target.command_list, context, geometry, brush,
-- 
GitLab


From f99d9b73569949dd15a382815fc5a01f2ec5668c Mon Sep 17 00:00:00 2001
From: Akihiro Sagawa <sagawa.aki@gmail.com>
Date: Tue, 6 May 2025 23:58:39 +0900
Subject: [PATCH 4/5] d2d1: Fix a crash in FillGeometry method family if no
 target is set.

---
 dlls/d2d1/device.c     | 15 +++++++++++++++
 dlls/d2d1/tests/d2d1.c | 13 +++++++++++++
 2 files changed, 28 insertions(+)

diff --git a/dlls/d2d1/device.c b/dlls/d2d1/device.c
index e06bbb32cb1..4246b84979f 100644
--- a/dlls/d2d1/device.c
+++ b/dlls/d2d1/device.c
@@ -657,6 +657,9 @@ static void STDMETHODCALLTYPE d2d_device_context_FillRectangle(ID2D1DeviceContex
 
     TRACE("iface %p, rect %s, brush %p.\n", iface, debug_d2d_rect_f(rect), brush);
 
+    if (FAILED(context->error.code))
+        return;
+
     if (context->target.type == D2D_TARGET_COMMAND_LIST)
     {
         d2d_command_list_fill_rectangle(context->target.command_list, context, rect, brush);
@@ -705,6 +708,9 @@ static void STDMETHODCALLTYPE d2d_device_context_FillRoundedRectangle(ID2D1Devic
 
     TRACE("iface %p, rect %p, brush %p.\n", iface, rect, brush);
 
+    if (FAILED(render_target->error.code))
+        return;
+
     if (FAILED(hr = ID2D1Factory_CreateRoundedRectangleGeometry(render_target->factory, rect, &geometry)))
     {
         ERR("Failed to create geometry, hr %#lx.\n", hr);
@@ -747,6 +753,9 @@ static void STDMETHODCALLTYPE d2d_device_context_FillEllipse(ID2D1DeviceContext6
 
     TRACE("iface %p, ellipse %p, brush %p.\n", iface, ellipse, brush);
 
+    if (FAILED(render_target->error.code))
+        return;
+
     if (FAILED(hr = ID2D1Factory_CreateEllipseGeometry(render_target->factory, ellipse, &geometry)))
     {
         ERR("Failed to create geometry, hr %#lx.\n", hr);
@@ -1109,6 +1118,12 @@ static void STDMETHODCALLTYPE d2d_device_context_FillGeometry(ID2D1DeviceContext
     if (FAILED(context->error.code))
         return;
 
+    if (context->target.type == D2D_TARGET_UNKNOWN)
+    {
+        d2d_device_context_set_error(context, D2DERR_WRONG_STATE);
+        return;
+    }
+
     if (opacity_brush && brush_impl->type != D2D_BRUSH_TYPE_BITMAP)
     {
         d2d_device_context_set_error(context, D2DERR_INCOMPATIBLE_BRUSH_TYPES);
-- 
GitLab


From 978dc767b061a9d5105ef92488ea1d9429823a52 Mon Sep 17 00:00:00 2001
From: Akihiro Sagawa <sagawa.aki@gmail.com>
Date: Tue, 6 May 2025 23:58:39 +0900
Subject: [PATCH 5/5] d2d1: Fix a crash in DrawGlyphRun method family if no
 target is set.

---
 dlls/d2d1/device.c     |  6 ++++++
 dlls/d2d1/tests/d2d1.c | 24 ++++++++++++++++++++++++
 2 files changed, 30 insertions(+)

diff --git a/dlls/d2d1/device.c b/dlls/d2d1/device.c
index 4246b84979f..59e93bfac38 100644
--- a/dlls/d2d1/device.c
+++ b/dlls/d2d1/device.c
@@ -1549,6 +1549,12 @@ static void d2d_device_context_draw_glyph_run(struct d2d_device_context *context
     if (FAILED(context->error.code))
         return;
 
+    if (context->target.type == D2D_TARGET_UNKNOWN)
+    {
+        d2d_device_context_set_error(context, D2DERR_WRONG_STATE);
+        return;
+    }
+
     if (context->target.type == D2D_TARGET_COMMAND_LIST)
     {
         d2d_command_list_draw_glyph_run(context->target.command_list, context, baseline_origin, glyph_run,
-- 
GitLab

